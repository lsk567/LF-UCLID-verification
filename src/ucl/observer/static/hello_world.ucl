module common {
    type rxn_id_t = enum { NULL, A1, B1 };
    type timestamp_t = integer;
    type invocation_t = { rxn_id_t, timestamp_t };
}

module main {
    
    type * = common.*;
    type index_t = integer;
    
    var trace1 : [index_t]invocation_t;

    init {
        trace1[0] = { A1, 1 };
        trace1[1] = { A1, 3 };
        trace1[2] = { A1, 5 };
    }

    property increment : forall (i, j : index_t) :: (i >= 0 && i <= 2 && j >= 0 && j <= 2)
        ==> (i < j) 
        ==> trace1[i]._2 < trace1[j]._2;

    control {
        v = unroll(0);
        check;
        print_results;
        v.print_cex();
    }
}
